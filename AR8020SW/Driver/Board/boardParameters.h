#ifndef _BOARD_PARAMETERS_H#define _BOARD_PARAMETERS_H#include <stdint.h>#include "bb_types.h"typedef struct{    uint8_t page;       //page: 0,1,2,3    uint8_t addr;    uint8_t value;}STRU_BB_REG;typedef struct{    uint8_t addr_h;    uint8_t addr_l;    uint8_t value;}STRU_RF_REG;typedef struct {    uint8_t           u8_bbStartMcs10M;    uint8_t           u8_bbStartMcs20M;    ENUM_RF_BAND      e_bandsupport;    //before calibration    uint8_t           u8_bbSkyRegsCnt;    uint8_t           u8_bbGrdRegsCnt;    //registers count after calibration    uint8_t           u8_bbSkyRegsCntAfterCali;    uint8_t           u8_bbGrdRegsCntAfterCali;}STRU_BOARD_BB_PARA;typedef struct{    //registers before calibration    STRU_BB_REG  *pstru_bbSkyRegs;    STRU_BB_REG  *pstru_bbGrdRegs;        //registers after calibration    STRU_BB_REG  *pstru_bbSkyRegsAfterCali;    STRU_BB_REG  *pstru_bbGrdRegsAfterCali;}STRU_BOARD_BB_REG;typedef struct {    //before calibration    uint8_t           u8_rfCnt;                 //1: only enable 1 RF8003s                                                //2: enable 2 RF8003s    uint8_t           u8_rf0SkyRegsCnt;                                                        uint8_t           u8_rf0GrdRegsCnt;        uint8_t           u8_rf1GrdRegsCnt;    //registers count after calibration    uint8_t           u8_rf0SkyRegsCntAfterCali;                                                        uint8_t           u8_rf0GrdRegsCntAfterCali;        uint8_t           u8_rf1GrdRegsCntAfterCali;    uint8_t           boardCfgName[16];}STRU_BOARD_RF_PARA;typedef struct {    STRU_RF_REG  *pstru_rf1SkyRegs;    STRU_RF_REG  *pstru_rf1GrdRegs;    STRU_RF_REG  *pstru_rf2GrdRegs;    STRU_RF_REG  *pstru_rf1SkyRegsAfterCali;    STRU_RF_REG  *pstru_rf1GrdRegsAfterCali;    STRU_RF_REG  *pstru_rf2GrdRegsAfterCali;}STRU_BOARD_RF_REG;#endif